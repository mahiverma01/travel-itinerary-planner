{"ast":null,"code":"const handleSignup = async e => {\n  e.preventDefault();\n  try {\n    console.log('Sending signup request...', {\n      username,\n      email,\n      password\n    });\n    const response = await fetch('http://localhost:5000/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        email: email,\n        password: password\n      })\n    });\n    console.log('Response status:', response.status);\n\n    // Check if response is OK before parsing JSON\n    if (response.ok) {\n      const data = await response.json();\n      console.log('Registration successful:', data);\n      alert('Registration successful! Please login.');\n      // Redirect to login or clear form\n      setUsername('');\n      setEmail('');\n      setPassword('');\n    } else {\n      // Handle error responses\n      const errorText = await response.text();\n      console.error('Registration failed:', errorText);\n      try {\n        // Try to parse as JSON if possible\n        const errorData = JSON.parse(errorText);\n        alert('Registration failed: ' + (errorData.message || errorText));\n      } catch {\n        // If not JSON, show raw text\n        alert('Registration failed: ' + errorText);\n      }\n    }\n  } catch (error) {\n    console.error('Signup error:', error);\n    alert('Network error: ' + error.message);\n  }\n};","map":{"version":3,"names":["handleSignup","e","preventDefault","console","log","username","email","password","response","fetch","method","headers","body","JSON","stringify","status","ok","data","json","alert","setUsername","setEmail","setPassword","errorText","text","error","errorData","parse","message"],"sources":["C:/Users/Sandhya Bharti/OneDrive/Documents/Mahi/Code/travel-itinerary-planner/frontend/src/components/Login.js"],"sourcesContent":["const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n        console.log('Sending signup request...', { username, email, password });\r\n        \r\n        const response = await fetch('http://localhost:5000/api/auth/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                email: email,\r\n                password: password\r\n            }),\r\n        });\r\n\r\n        console.log('Response status:', response.status);\r\n        \r\n        // Check if response is OK before parsing JSON\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Registration successful:', data);\r\n            alert('Registration successful! Please login.');\r\n            // Redirect to login or clear form\r\n            setUsername('');\r\n            setEmail('');\r\n            setPassword('');\r\n        } else {\r\n            // Handle error responses\r\n            const errorText = await response.text();\r\n            console.error('Registration failed:', errorText);\r\n            \r\n            try {\r\n                // Try to parse as JSON if possible\r\n                const errorData = JSON.parse(errorText);\r\n                alert('Registration failed: ' + (errorData.message || errorText));\r\n            } catch {\r\n                // If not JSON, show raw text\r\n                alert('Registration failed: ' + errorText);\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error('Signup error:', error);\r\n        alert('Network error: ' + error.message);\r\n    }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;MAAEC,QAAQ;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IAEvE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBT,QAAQ,EAAEA,QAAQ;QAClBC,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACd,CAAC;IACL,CAAC,CAAC;IAEFJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,QAAQ,CAACO,MAAM,CAAC;;IAEhD;IACA,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCf,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEa,IAAI,CAAC;MAC7CE,KAAK,CAAC,wCAAwC,CAAC;MAC/C;MACAC,WAAW,CAAC,EAAE,CAAC;MACfC,QAAQ,CAAC,EAAE,CAAC;MACZC,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MACH;MACA,MAAMC,SAAS,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;MACvCrB,OAAO,CAACsB,KAAK,CAAC,sBAAsB,EAAEF,SAAS,CAAC;MAEhD,IAAI;QACA;QACA,MAAMG,SAAS,GAAGb,IAAI,CAACc,KAAK,CAACJ,SAAS,CAAC;QACvCJ,KAAK,CAAC,uBAAuB,IAAIO,SAAS,CAACE,OAAO,IAAIL,SAAS,CAAC,CAAC;MACrE,CAAC,CAAC,MAAM;QACJ;QACAJ,KAAK,CAAC,uBAAuB,GAAGI,SAAS,CAAC;MAC9C;IACJ;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZtB,OAAO,CAACsB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrCN,KAAK,CAAC,iBAAiB,GAAGM,KAAK,CAACG,OAAO,CAAC;EAC5C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}